apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: prom-stack
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: alertmanager-svc
          servicePort: 9093
      - path: /prometheus
        backend:
          serviceName: prometheus-svc
          servicePort: 9090
      - path: /metrics
        backend:
          serviceName: go-demo-svc
          servicePort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
spec:
  selector:
    matchLabels:
      type: alerts
      service: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        type: alerts
        service: prometheus
    spec:
      containers:
      - name: alertmanager
        image: prom/alertmanager:v0.21.0
        command:
        - /bin/alertmanager
        args:
        - "--config.file=/etc/config/alertmanager.yml"
        volumeMounts:
        - mountPath: /etc/config/
          name: alert-conf
      volumes:
      - name: alert-conf
        configMap:
          name: alert-cm
          
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  selector:
    matchLabels:
      type: monitor
      service: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        type: monitor
        service: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.0.0
        command:
        - /bin/prometheus
        args:
        - "--config.file=/etc/config/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--web.console.libraries=/usr/share"
        - "--web.external-url=http://192.168.99.111/prometheus"
        volumeMounts:
        - mountPath: /etc/config/
          name: prom-conf
      volumes:
      - name: prom-conf
        configMap:
          name: prom-cm
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-demo
spec:
  selector:
    matchLabels:
      type: backend
      service: go-demo
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        type: backend
        service: go-demo
    spec:
      containers:
      - name: go-demo
        image: zkmrgirish/go-demo:v0.0.6

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus-svc
spec:
  ports:
  - port: 9090
  selector:
    type: monitor
    service: prometheus

---

apiVersion: v1
kind: Service
metadata:
  name: alertmanager-svc
spec:
  ports:
  - port: 9093
  selector:
    type: alerts
    service: prometheus

---

apiVersion: v1
kind: Service
metadata:
  name: go-demo-svc
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/prometheus'
    prometheus.io/port: '8080'
spec:
  ports:
  - name: http-server
    port: 8080
  selector:
    type: backend
    service: go-demo

